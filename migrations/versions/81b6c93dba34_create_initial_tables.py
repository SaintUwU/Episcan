"""Create initial tables

Revision ID: 81b6c93dba34
Revises: 
Create Date: 2025-09-21 14:05:51.329839

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '81b6c93dba34'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('google_trends_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('keyword', sa.String(length=100), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('interest_score', sa.Integer(), nullable=False),
    sa.Column('geo_location', sa.String(length=10), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(length=50), nullable=False),
    sa.Column('model_version', sa.String(length=20), nullable=False),
    sa.Column('evaluation_date', sa.Date(), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=False),
    sa.Column('precision', sa.Float(), nullable=False),
    sa.Column('recall', sa.Float(), nullable=False),
    sa.Column('f1_score', sa.Float(), nullable=False),
    sa.Column('auc_roc', sa.Float(), nullable=False),
    sa.Column('confusion_matrix', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('feature_importance', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('evaluation_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('news_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('county', sa.String(length=50), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_label', sa.String(length=20), nullable=True),
    sa.Column('keywords', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('health_relevance_score', sa.Float(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_table('outbreak_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('county', sa.String(length=50), nullable=False),
    sa.Column('disease_type', sa.String(length=100), nullable=False),
    sa.Column('prediction_date', sa.Date(), nullable=False),
    sa.Column('outbreak_probability', sa.Float(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('risk_level', sa.String(length=20), nullable=False),
    sa.Column('contributing_factors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('model_version', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('processed_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_type', sa.String(length=20), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('processed_text', sa.Text(), nullable=False),
    sa.Column('features', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('county', sa.String(length=50), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('health_relevance_score', sa.Float(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trend_analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('county', sa.String(length=50), nullable=False),
    sa.Column('disease_type', sa.String(length=100), nullable=False),
    sa.Column('analysis_date', sa.Date(), nullable=False),
    sa.Column('trend_direction', sa.String(length=20), nullable=False),
    sa.Column('trend_strength', sa.Float(), nullable=False),
    sa.Column('peak_period', sa.Date(), nullable=True),
    sa.Column('data_points', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('forecast_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('twitter_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tweet_id', sa.String(length=50), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('county', sa.String(length=50), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_label', sa.String(length=20), nullable=True),
    sa.Column('keywords', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_retweet', sa.Boolean(), nullable=True),
    sa.Column('retweet_count', sa.Integer(), nullable=True),
    sa.Column('favorite_count', sa.Integer(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tweet_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('who_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('disease_type', sa.String(length=100), nullable=True),
    sa.Column('outbreak_status', sa.String(length=50), nullable=True),
    sa.Column('affected_counties', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('case_count', sa.Integer(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('county', sa.String(length=50), nullable=True),
    sa.Column('disease_type', sa.String(length=100), nullable=True),
    sa.Column('prediction_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('acknowledged_by', sa.String(length=100), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['prediction_id'], ['outbreak_predictions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('alerts')
    op.drop_table('who_data')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('twitter_data')
    op.drop_table('trend_analysis')
    op.drop_table('processed_data')
    op.drop_table('outbreak_predictions')
    op.drop_table('news_data')
    op.drop_table('model_performance')
    op.drop_table('google_trends_data')
    # ### end Alembic commands ###
